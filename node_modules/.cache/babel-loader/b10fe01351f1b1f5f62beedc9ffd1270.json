{"remainingRequest":"G:\\RQDL\\base\\backend-admin\\node_modules\\babel-loader\\lib\\index.js!G:\\RQDL\\base\\backend-admin\\src\\store\\modules\\user.js","dependencies":[{"path":"G:\\RQDL\\base\\backend-admin\\src\\store\\modules\\user.js","mtime":1620715077827},{"path":"G:\\RQDL\\base\\backend-admin\\babel.config.js","mtime":1620715077731},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["G:/RQDL/base/backend-admin/src/store/modules/user.js"],"names":["Vue","globalSettings","getAccessToken","removeAccessToken","setAccessToken","router","encryptedData","$api","$cache","isBlank","state","token","console","log","accessToken","username","avatar","permissions","hasLogin","getters","mutations","setUsername","setAvatar","setPermissions","setHasLogin","actions","commit","login","context","userInfo","Promise","resolve","reject","loginData","account","password","device","publicKey","getCache","encode","request","baseUrl","then","res","code","data","dispatch","hour","Date","getHours","thisTime","prototype","$baseNotify","title","$baseMessage","msg","catch","err","logout","getUserInfo","get","push","company","root","getPermissions"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport globalSettings from '@/setting'\r\n\r\nimport {getAccessToken, removeAccessToken, setAccessToken} from '@/utils/accessToken'\r\nimport router from '@/router'\r\n\r\nimport {encryptedData} from '@/utils/encrypt'\r\nimport $api from '@/utils/api'\r\nimport $cache from '@/utils/cache'\r\nimport {isBlank} from \"@/utils/validate\";\r\n\r\nconst state = () => {\r\n    let token = getAccessToken();\r\n    console.log(\"token\", token)\r\n    return {\r\n        accessToken: token,\r\n        username: '',\r\n        avatar: '',\r\n        permissions: [],\r\n        hasLogin: !isBlank(token),\r\n    }\r\n};\r\nconst getters = {\r\n    accessToken: (state) => state.accessToken,\r\n    username: (state) => state.username,\r\n    avatar: (state) => state.avatar,\r\n    permissions: (state) => state.permissions,\r\n    hasLogin: (state) => state.hasLogin,\r\n};\r\nconst mutations = {\r\n    setAccessToken(state, accessToken) {\r\n        state.accessToken = accessToken;\r\n        setAccessToken(accessToken)\r\n    },\r\n    setUsername(state, username) {\r\n        state.username = username\r\n    },\r\n    setAvatar(state, avatar) {\r\n        state.avatar = avatar\r\n    },\r\n    setPermissions(state, permissions) {\r\n        state.permissions = permissions\r\n    },\r\n    setHasLogin(state, hasLogin) {\r\n        state.hasLogin = hasLogin\r\n    },\r\n};\r\nconst actions = {\r\n    setPermissions({commit}, permissions) {\r\n        commit('setPermissions', permissions)\r\n    },\r\n    /**\r\n     * 用户登录\r\n     * @param context\r\n     * @param userInfo\r\n     * @returns {Promise<void>}\r\n     */\r\n    async login(context, userInfo) {\r\n        console.log(\"触发登录\")\r\n        return new Promise(async (resolve, reject) => {\r\n            console.log(userInfo);\r\n            let loginData = {\r\n                account: userInfo.account,\r\n                password: userInfo.password,\r\n                device: 'PC'\r\n            };\r\n            let publicKey = $cache.getCache(\"RSA_PUB_KEY\");\r\n            let encode = await encryptedData(loginData, publicKey);\r\n            console.log(\"加密之后\", encode);\r\n\r\n            $api.request($api.baseUrl + '/backend/login', encode, 'POST')\r\n                .then(res => {\r\n                    if (res.code === 200) {\r\n                        let accessToken = res.data;\r\n                        if (accessToken) {\r\n                            context.commit('setAccessToken', accessToken);\r\n                            context.commit('setHasLogin', true);\r\n                            context.dispatch('getUserInfo')\r\n\r\n                            const hour = new Date().getHours();\r\n                            const thisTime =\r\n                                hour < 2\r\n                                    ? '午夜好' :\r\n                                    hour < 4\r\n                                        ? '夜猫子好' :\r\n                                        hour < 8\r\n                                            ? '早上好'\r\n                                            : hour <= 11\r\n                                            ? '上午好'\r\n                                            : hour <= 13\r\n                                                ? '中午好'\r\n                                                : hour < 18\r\n                                                    ? '下午好'\r\n                                                    : '晚上好';\r\n                            Vue.prototype.$baseNotify(`欢迎登录${globalSettings.title}`, `${thisTime}！${userInfo.account}`);\r\n                            resolve(res.data);\r\n                        } else {\r\n                            Vue.prototype.$baseMessage(res.msg, 400)\r\n                        }\r\n                    } else {\r\n                        Vue.prototype.$baseMessage(res.msg, 400)\r\n                        reject(res);\r\n                    }\r\n                }).catch(err => {\r\n                reject(err);\r\n            })\r\n        })\r\n    },\r\n    /**\r\n     * 退出登录\r\n     * @param commit\r\n     * @returns {Promise<void>}\r\n     */\r\n    async logout({commit}) {\r\n        commit('setPermissions', []);\r\n        commit('setAccessToken', '');\r\n        commit('setHasLogin', false);\r\n        removeAccessToken()\r\n    },\r\n    /**\r\n     * 获取用户信息\r\n     * @param commit\r\n     * @param state\r\n     * @param dispatch\r\n     * @returns {Promise<boolean|*>}\r\n     */\r\n    async getUserInfo({commit, state, dispatch}) {\r\n        if (!state.hasLogin) return;\r\n\r\n        const {data, code} = await $api.get(\"admin/info\");\r\n\r\n        if (code === 100) {\r\n            commit('setHasLogin', false);\r\n            removeAccessToken()\r\n            Vue.prototype.$baseMessage('验证失败，请重新登录...', 'error');\r\n            router.push('/login').catch((err) => {\r\n                console.log(err)\r\n            });\r\n            return false\r\n        }\r\n        if (code === 200) {\r\n            let {username, avatar, company} = data;\r\n            let permissions = ['admin'];\r\n            commit('setPermissions', permissions);\r\n            commit('setUsername', username);\r\n            commit('setAvatar', avatar);\r\n            commit('setHasLogin', true);\r\n            dispatch('shop/setInfo', company,{root: true})\r\n            return permissions\r\n        } else {\r\n            Vue.prototype.$baseMessage('用户信息接口异常', 'error');\r\n            return false\r\n        }\r\n\r\n    },\r\n\r\n    // 获取我的权限\r\n    getPermissions({state}) {\r\n        console.log(\"获取我的权限/state\", state)\r\n        return new Promise(resolve => {\r\n            resolve(state.permissions)\r\n        })\r\n    }\r\n};\r\nexport default {state, getters, mutations, actions}\r\n"]}]}