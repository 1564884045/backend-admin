{"remainingRequest":"G:\\RQDL\\base\\backend-admin\\node_modules\\babel-loader\\lib\\index.js!G:\\RQDL\\base\\backend-admin\\src\\utils\\api.js","dependencies":[{"path":"G:\\RQDL\\base\\backend-admin\\src\\utils\\api.js","mtime":1621303824002},{"path":"G:\\RQDL\\base\\backend-admin\\babel.config.js","mtime":1620715077731},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["G:/RQDL/base/backend-admin/src/utils/api.js"],"names":["axios","Message","getAccessToken","removeAccessToken","env","router","baseUrl","URL","wsUrl","WEB_SOCKET","baseApiUrl","uploadUrl","request","url","data","method","header","showMsg","Promise","resolve","reject","_conf","headers","params","then","res","_res","code","success","msg","error","Number","parseInt","catch","console","log","message","get","action","token","reLogin","err","post","del","upload","$message","warning","setTimeout","window","location","reload","install","Vue","prototype","$request","$get","$post","$baseUrl"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport {Message} from 'element-ui'\r\n\r\nimport {getAccessToken, removeAccessToken} from './accessToken'\r\n\r\nimport 'element-ui/lib/theme-chalk/index.css'\r\n\r\nimport env from '../../env';\r\nimport router from \"@/router\";\r\n\r\nconst baseUrl = env.URL;\r\n\r\nconst wsUrl = env.WEB_SOCKET;\r\n\r\nconst baseApiUrl = baseUrl + '/backend/';\r\n\r\nconst uploadUrl = baseUrl + \"/upload/index\";\r\n\r\n\r\n// 配置 携带cookie信息\r\n// axios.defaults.withCredentials = true;\r\n/**\r\n * 基础请求方法\r\n * @param url 请求地址\r\n * @param data 提交的数据，格式为json\r\n * @param method 请求方法\r\n * @param header 请求头\r\n * @param showMsg 是否显示返回信息\r\n * @returns {Promise}\r\n */\r\nconst request = function (url, data, method = \"GET\", header = false, showMsg = false) {\r\n  if (!header) header = {'Content-Type': 'application/json'};\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let _conf = {\r\n      url: url,\r\n      method: method,\r\n      headers: header,\r\n    };\r\n\r\n    if (method === 'GET') _conf.params = data;\r\n    if (method === 'POST' || method === 'DELETE') _conf.data = data;\r\n    axios(_conf).then(res => {\r\n      let _res = res.data;\r\n      if (showMsg) {\r\n        if (_res.code === 200) Message.success(_res.msg)\r\n        else if (_res.code === 400) Message.error(_res.msg);\r\n      }\r\n      //成功\r\n      res.data.code = Number.parseInt(res.data.code);\r\n      resolve(res.data)\r\n    }).catch(res => {\r\n      console.log(res);\r\n      reject({\r\n        code: 500,\r\n        msg: '请求错误！！' + res.message,\r\n        data: res\r\n      })\r\n\r\n    })\r\n  })\r\n};\r\n\r\n/**\r\n * get方法\r\n * @param action\r\n * @param data\r\n * @param showMsg\r\n * @returns {Promise<JSON>|{msg: string, code: number, data}}\r\n */\r\nexport const get = async function (action, data, showMsg = false) {\r\n  let token = getAccessToken();\r\n  let header = {\r\n    'Content-Type': 'application/json',\r\n    \"TOKEN\": token\r\n  };\r\n  let url = baseApiUrl + action;\r\n  return new Promise((resolve, reject) => {\r\n    request(url, data, \"GET\", header, showMsg).then(async res => {\r\n\r\n      if (res.code === 100) {\r\n        await reLogin();\r\n      }\r\n      resolve(res);\r\n    }).catch(err => {\r\n      reject(err)\r\n    });\r\n  })\r\n\r\n};\r\n\r\n/**\r\n * post请求方法\r\n * @param action\r\n * @param data\r\n * @param showMsg\r\n * @returns {Promise<JSON>|{msg: string, code: number, data}}\r\n */\r\nconst post = async function (action, data, showMsg = false) {\r\n  let token = getAccessToken();\r\n  let header = {\r\n    'Content-Type': 'application/json',\r\n    \"TOKEN\": token\r\n  };\r\n  let url = baseApiUrl + action;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    request(url, data, \"POST\", header, showMsg).then(async res => {\r\n      // TODO 这里全局请求进行校验\r\n      // TODO 登录信息失效\r\n      if (res.code === 100) {\r\n        await reLogin();\r\n      }\r\n      resolve(res);\r\n\r\n    }).catch(err => {\r\n      // console.log(err);\r\n      reject(err)\r\n    });\r\n  })\r\n\r\n};\r\n/**\r\n * delete请求方法\r\n * @param action\r\n * @param data\r\n * @param showMsg\r\n * @returns {Promise<JSON>|{msg: string, code: number, data}}\r\n */\r\nconst del = async function (action, data, showMsg = false) {\r\n  let token = getAccessToken();\r\n  let header = {\r\n    'Content-Type': 'application/json',\r\n    \"TOKEN\": token\r\n  };\r\n  let url = baseApiUrl + action;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    request(url, data, \"DELETE\", header, showMsg).then(async res => {\r\n      // TODO 这里全局请求进行校验\r\n      // TODO 登录信息失效\r\n      if (res.code === 100) {\r\n        await reLogin();\r\n      }\r\n      resolve(res);\r\n\r\n    }).catch(err => {\r\n      // console.log(err);\r\n      reject(err)\r\n    });\r\n  })\r\n\r\n};\r\n\r\n\r\nconst upload = function () {\r\n  this.$message('这是一条消息提示');\r\n};\r\n\r\n/**\r\n * 重新登录\r\n * @returns {Promise<void>}\r\n */\r\nconst reLogin = async function () {\r\n  console.log('登录失效 %c调用位置： %c api.reLogin', 'color: blue', 'color: red');\r\n  removeAccessToken();\r\n    Message.warning(\"登录失效或过期\");\r\n  setTimeout(()=>{\r\n      window.location.reload();\r\n  },1200)\r\n};\r\n\r\n/**\r\n * 获取头部\r\n * @returns {{TOKEN: *}}\r\n */\r\nconst header = function () {\r\n  let token = getAccessToken();\r\n  return {\r\n    \"TOKEN\": token\r\n  };\r\n};\r\nexport default {\r\n  request,\r\n  baseApiUrl,\r\n  baseUrl,\r\n  uploadUrl,\r\n  get,\r\n  post,\r\n  del,\r\n  upload,\r\n  reLogin,\r\n  header,\r\n  wsUrl,\r\n  install: Vue =>{\r\n    Vue.prototype.$request = request;\r\n    Vue.prototype.$get = get;\r\n    Vue.prototype.$post = post;\r\n    Vue.prototype.$baseUrl = baseUrl;\r\n  }\r\n};\r\n"]}]}