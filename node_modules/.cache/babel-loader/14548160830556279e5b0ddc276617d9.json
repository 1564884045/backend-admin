{"remainingRequest":"G:\\RQDL\\base\\backend-admin\\node_modules\\babel-loader\\lib\\index.js!G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\RQDL\\base\\backend-admin\\src\\views\\user\\components\\addressList.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\RQDL\\base\\backend-admin\\src\\views\\user\\components\\addressList.vue","mtime":1620715077891},{"path":"G:\\RQDL\\base\\backend-admin\\babel.config.js","mtime":1620715077731},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["addressList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div style=\"height: 100%\">\r\n    <form-builder style=\"padding: 10px;background-color: #f9f9f9;border-radius: 5px\" :fields=\"searchFields\"\r\n                  :inline=\"true\"\r\n                  submit-name=\"搜索\" @onSubmit=\"search\"/>\r\n\r\n    <table-builder :table-data=\"tableData\" :cols=\"colsData\" :total=\"total\">\r\n      <template slot=\"tableHeader\">\r\n        <el-button type=\"default\" size=\"mini\" plain style=\"margin: 10px\" @click=\"exportExcel\">导出表格</el-button>\r\n      </template>\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"{row}\">\r\n          <el-button type=\"primary\" plain size=\"mini\" @click=\"showEABox(row)\">修改</el-button>\r\n          <el-button type=\"danger\" plain size=\"mini\" @click=\"del(row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </table-builder>\r\n\r\n    <el-dialog :visible.sync=\"showAddBox\" :title=\"editTitle\" :close-on-click-modal=\"false\" append-to-body>\r\n      <el-form ref=\"form\" label-width=\"90px\">\r\n        <el-form-item label=\"账号\">\r\n          <el-input v-model=\"tmpRow.account\" placeholder=\"请输入账号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"登录密码\">\r\n          <el-input v-model=\"tmpRow.password\" placeholder=\"请输入登录密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"联系电话\">\r\n          <el-input v-model=\"tmpRow.phone\" placeholder=\"请输入联系电话\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button @click=\"showAddBox = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"saveUpdate\">提交</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'addressList',\r\n  props: {\r\n    userId: {\r\n      type: String,\r\n      default: \"\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // 分页数据\r\n      page: 1,//默认显示第几页\r\n      pageSize: 20,//默认显示多少条每页\r\n      total: 0, // 总记录数\r\n      // 页面结构数据\r\n      tableData: [],\r\n      // 表格字段\r\n      colsData: [\r\n        {prop: 'name', label: '联系人', sortable: false, fixed: false},\r\n        {prop: 'phone', label: '电话', sortable: false, fixed: false},\r\n        {\r\n          prop: 'gender', label: '性别', sortable: false, fixed: false, pipe: function (val) {\r\n            return val === 1 ? '男' : '女'\r\n          }\r\n        },\r\n        {prop: 'address', label: '地址', sortable: false, fixed: false},\r\n        {prop: 'detail', label: '详细位置', sortable: false, fixed: false},\r\n      ],\r\n      // 搜索表单字段\r\n      searchFields: [\r\n        {label: '搜索', prop: 'searchKey', type: 'text'},\r\n      ],\r\n      // 查询数据\r\n      queryData: {},\r\n\r\n      // 页面显示数据\r\n      showAddBox: false,\r\n\r\n      imageUrl: '',\r\n      tmpRow: { // 查看、添加的临时变量\r\n        id: ''\r\n      },\r\n      editTitle: '添加',\r\n      submitText: '确认添加',\r\n\r\n      searchRoleLoading: false,\r\n      roleListArr: []\r\n    }\r\n  },\r\n  created() {\r\n    this.getData();\r\n    // 获取供应商\r\n  },\r\n  methods: {\r\n    /**\r\n     * 本页获取数据\r\n     */\r\n    async getData() {\r\n      this.queryData.userId = this.userId;\r\n\r\n      this.queryData.page = this.page;\r\n      this.queryData.pageSize = this.pageSize;\r\n\r\n      console.log(this.queryData);\r\n\r\n      let _data = await this.$api.get('user/address/list', this.queryData);\r\n      console.log(_data);\r\n      if (_data.code === 200) {\r\n        this.tableData = _data.data.list;\r\n        this.total = _data.data.total\r\n      }\r\n    },\r\n    /**\r\n     * 修改角色\r\n     */\r\n    async roleChange(e, row) {\r\n      let postData = {\r\n        roleId: e\r\n      };\r\n      if (row.id) postData.id = row.id;\r\n\r\n      console.log(e);\r\n      console.log(row);\r\n      let _res = await this.$api.post(\"user/address\", postData);\r\n      if (_res.code !== 200) {\r\n        this.$message.error(_res.msg);\r\n        this.getData();\r\n      }\r\n    },\r\n    /**\r\n     * 修改状态\r\n     */\r\n    async statusChange(e, row) {\r\n      let postData = {\r\n        status: e\r\n      };\r\n      if (row.id) postData.id = this.tmpRow.id;\r\n\r\n      let _res = await this.$api.post(\"user/address\", postData);\r\n      if (_res.code !== 200) {\r\n        this.$message.error(_res.msg);\r\n        this.getData();\r\n      }\r\n    },\r\n\r\n    // 监听页面改变\r\n    pageChange(e) {\r\n      this.page = e.currentPage;\r\n      this.pageSize = e.pageSize\r\n    },\r\n    search(e) {\r\n      console.log(e);\r\n      this.queryData = e;\r\n      this.getData()\r\n    },\r\n    /**\r\n     * 新增和修改\r\n     * @param e\r\n     * @returns {Promise<void>}\r\n     */\r\n    async saveUpdate() {\r\n      let postData = {\r\n        userId: this.userId,\r\n        account: this.tmpRow.account,\r\n        password: this.tmpRow.password,\r\n        phone: this.tmpRow.phone,\r\n      };\r\n      if (this.tmpRow.id) postData.id = this.tmpRow.id;\r\n\r\n      let _post = await this.$api.post('user/address', postData);\r\n      if (_post.code === 200) {\r\n        this.showAddBox = false;\r\n        this.$message.success(_post.msg);\r\n        this.getData()\r\n      } else {\r\n        this.$message.error(_post.msg);\r\n      }\r\n    },\r\n\r\n    showEABox(row = null) {\r\n      console.log(row);\r\n      if (row) {\r\n        this.tmpRow = row;\r\n        this.tmpRow.password = \"\";\r\n        this.editTitle = '编辑信息';\r\n        this.submitText = '确认修改';\r\n      } else {\r\n        this.tmpRow = {};\r\n        this.editTitle = '新增管理员';\r\n        this.submitText = '提交';\r\n      }\r\n      this.showAddBox = true;\r\n    },\r\n\r\n\r\n    del(row) {\r\n      this.$confirm('此操作将永久删除该条记录, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$api.del('user/address/' + row.id).then(_del => {\r\n          if (_del.code === 200) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            });\r\n            this.getData()\r\n          } else {\r\n            this.$message({\r\n              type: 'error',\r\n              message: '删除删除失败'\r\n            })\r\n          }\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'error',\r\n            message: '删除删除失败'\r\n          })\r\n        })\r\n\r\n      }).catch(() => {\r\n\r\n      })\r\n    },\r\n\r\n    exportExcel() {\r\n      this.showExportBox = true\r\n    },\r\n    exportNow() {\r\n      console.log(\"导出参数\", this.exportForm)\r\n      const loading = this.$loading({\r\n        lock: true,\r\n        text: '导出中...',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.2)'\r\n      });\r\n      setTimeout(() => {\r\n        loading.close();\r\n      }, 6000);\r\n    },\r\n    handleRemove(file, fileList) {\r\n      console.log(file, fileList)\r\n    },\r\n    handlePreview(file) {\r\n      console.log(file)\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/user/components"}]}