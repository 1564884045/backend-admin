{"remainingRequest":"G:\\RQDL\\base\\backend-admin\\node_modules\\babel-loader\\lib\\index.js!G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\RQDL\\base\\backend-admin\\src\\views\\selects\\area.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\RQDL\\base\\backend-admin\\src\\views\\selects\\area.vue","mtime":1621303824024},{"path":"G:\\RQDL\\base\\backend-admin\\babel.config.js","mtime":1620715077731},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["area.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div style=\"height: 100%;max-width: 900px;margin: 0 auto\">\r\n\r\n        <div class=\"flex ptb-10 align-center\">\r\n            <div class=\"w-50\">\r\n                <el-button icon=\"el-icon-plus\" type=\"primary\" @click=\"showEABox(null,'add')\">\r\n                    添加\r\n                </el-button>\r\n            </div>\r\n\r\n            <div class=\"w-50 flex justify-end\">\r\n                <el-form class=\"align-center flex\" :inline=\"true\" :model=\"queryData\" @submit.native.prevent>\r\n                    <el-input class=\"mlr-10\"\r\n                              v-model.trim=\"queryData.searchKey\"\r\n                              placeholder=\"请输入查询条件\"\r\n                              clearable\r\n                    />\r\n                    <el-button icon=\"el-icon-search\" type=\"primary\" @click=\"search\">\r\n                        查询\r\n                    </el-button>\r\n                </el-form>\r\n            </div>\r\n        </div>\r\n\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"24\">\r\n                <el-tree\r\n                    :data=\"tableData\"\r\n                    lazy\r\n                    :load=\"loadChild\"\r\n                    node-key=\"id\"\r\n                    label=\"name\">\r\n                    <div class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n                        <span>{{ data.name }}</span>\r\n                        <div>\r\n                            <el-select style=\"margin-right: 10px\" size=\"mini\" v-model=\"data.status\" placeholder=\"请选择\"\r\n                                       @change=\"statusChange($event,data)\">\r\n                                <el-option\r\n                                    v-for=\"item in showArr\"\r\n                                    :key=\"item.value\"\r\n                                    :label=\"item.label\"\r\n                                    :value=\"item.value\">\r\n                                </el-option>\r\n                            </el-select>\r\n                            <el-button v-if=\"data.level === 2\" type=\"warning\" size=\"mini\"\r\n                                       @click.stop=\"() => setHot(data)\">\r\n                                {{data.hot ? '取消热门' : '设为热门'}}\r\n                            </el-button>\r\n\r\n                            <el-button v-if=\"data.level < 3\" type=\"success\" size=\"mini\"\r\n                                       @click.stop=\"() => showEABox(data,'add')\">\r\n                                添加\r\n                            </el-button>\r\n                            <el-button type=\"primary\" size=\"mini\" @click.stop=\"() => showEABox(data,'edit')\">\r\n                                修改\r\n                            </el-button>\r\n                            <el-button type=\"danger\" size=\"mini\" @click.stop=\"() => del(data)\">\r\n                                删除\r\n                            </el-button>\r\n                        </div>\r\n                    </div>\r\n                </el-tree>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!--  弹窗 //新增 编辑 -->\r\n        <el-dialog :visible.sync=\"showAddBox\" :title=\"editTitle\" :close-on-click-modal=\"false\">\r\n            <el-form v-if=\"showAddBox\" ref=\"form\" :model=\"tmpRow\" label-width=\"100px\">\r\n                <el-form-item label=\"添加方式\" prop=\"name\">\r\n                    <el-radio-group v-model=\"addType\">\r\n                        <el-radio label=\"auto\">选择城市（可多选）</el-radio>\r\n                        <el-radio label=\"custom\">自定义（补充添加）</el-radio>\r\n                    </el-radio-group>\r\n                </el-form-item>\r\n\r\n                <el-form-item v-if=\"addType === 'auto'\" label=\"城市\" prop=\"name\">\r\n                    <el-cascader placeholder=\"请选择城市（可多选）\" class=\"w-100\" :props=\"cityOptions\"\r\n                                 v-model=\"addObj.ids\"></el-cascader>\r\n                </el-form-item>\r\n                <el-form-item v-if=\"addType === 'custom'\" label=\"城市\" prop=\"name\">\r\n                    <el-input v-model=\"tmpRow.name\" placeholder=\"请输入城市名称\"/>\r\n                </el-form-item>\r\n                <el-form-item label=\"简介（可选）\" prop=\"intro\">\r\n                    <el-input type=\"textarea\" v-model=\"addObj.intro\"/>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"saveUpdate\">{{ submitText }}</el-button>\r\n                    <el-button @click=\"showAddBox = false\">取消</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    const showType = {\r\n        home_show: '首页展示',\r\n        category_show: '商城页展示',\r\n    };\r\n\r\n    let id = 1000;\r\n    export default {\r\n        name: 'areaList',\r\n        data() {\r\n            return {\r\n                // 页面结构数据\r\n                tableData: [],\r\n                // 搜索表单字段\r\n                searchFields: [\r\n                    {label: '分类', prop: 'name', type: 'text'},\r\n                ],\r\n                // 查询数据\r\n                queryData: {\r\n                    name: '',\r\n                },\r\n                // 自定义扩展字段\r\n                showArr: [\r\n                    {value: 1, label: '显示'},\r\n                    {value: 0, label: '不显示'},\r\n                ],\r\n\r\n                // 页面显示数据\r\n                showAddBox: false,\r\n                uploadUrl: this.$api.uploadUrl,\r\n                addType: 'auto',\r\n                openType: '',\r\n\r\n                imageUrl: '',\r\n                tmpRow: { // 查看、添加的临时变量\r\n                    id: '',\r\n                    pid: '',\r\n                    name: '',\r\n                    type: '',\r\n                    status: 1,\r\n                    level: 1\r\n                },\r\n                editTitle: '添加',\r\n                submitText: '确认添加',\r\n                cityOptions: {\r\n                    lazy: true,\r\n                    multiple: true,\r\n                    label: 'name',\r\n                    value: 'id',\r\n                    lazyLoad: (node, resolve) => {\r\n                        this.loadAllChild(node, resolve);\r\n                    }\r\n                },\r\n                addObj: {\r\n                    ids: [],\r\n                    intro: ''\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            // this.getData();\r\n            // 获取供应商\r\n\r\n        },\r\n        methods: {\r\n            /**\r\n             * 本页获取数据\r\n             */\r\n            async getData() {\r\n                this.queryData.pid = 0;\r\n                this.queryData.level = 1;\r\n\r\n                this.$api.get('area/used/list', this.queryData).then(_data => {\r\n                    console.log(_data);\r\n                    if (_data.code === 200) {\r\n                        let _list = _data.data.list;\r\n                        _list.map(i => {\r\n                            i.leaf = i.level >= 2\r\n                        });\r\n                        this.tableData = _list;\r\n                        this.total = _data.data.total\r\n                    }\r\n                })\r\n\r\n            },\r\n            /**\r\n             * 加载下一级\r\n             */\r\n            loadChild(node, resolve) {\r\n                let row = node.data;\r\n                if (3 > node.level > 0) {\r\n                    let query = {\r\n                        pid: row.id,\r\n                        level: 1 + node.level\r\n                    };\r\n                    this.$get('area/used/list', query).then(res => {\r\n                        if (res.code === 200) {\r\n                            let _list = res.data.list;\r\n                            console.log(\"_list\", _list);\r\n                            _list.map(i => {\r\n                                i.leaf = !(i.level >= 3)\r\n                            });\r\n                            resolve(_list)\r\n                        } else {\r\n                            resolve([])\r\n                        }\r\n                    }).catch(err => {\r\n                        resolve([])\r\n                    })\r\n                }\r\n            },\r\n            /**\r\n             * 选择框加载更多\r\n             */\r\n            loadAllChild(node, resolve) {\r\n                let row = node.data;\r\n                console.log(node);\r\n                console.log('this.tmpRow', this.tmpRow);\r\n                let query = {\r\n                    pid: this.tmpRow.id,\r\n                    level: this.tmpRow.level + 1\r\n                };\r\n                if (node.level > 0) {\r\n                    query = {\r\n                        pid: row.id,\r\n                        level: this.tmpRow.level + node.level\r\n                    };\r\n                }\r\n                if (query.level > 3) return resolve([]);\r\n                this.$get('area/list', query).then(res => {\r\n                    if (res.code === 200) {\r\n                        let _list = res.data.list;\r\n                        _list.map(i => {\r\n                            i.leaf = i.level >= 3\r\n                        })\r\n                        resolve(_list)\r\n                    } else {\r\n                        resolve([])\r\n                    }\r\n                }).catch(err => {\r\n                    resolve([])\r\n                })\r\n            },\r\n            setHot(data) {\r\n                let postData = {\r\n                    id: data.id,\r\n                    hot: !data.hot,\r\n                }\r\n                this.saveAction(postData);\r\n            },\r\n            async statusChange(e, row) {\r\n                let postData = {\r\n                    id: row.id,\r\n                    status: e\r\n                };\r\n\r\n                console.log(e);\r\n                console.log(row);\r\n                let _res = await this.$api.post(\"area/used\", postData);\r\n\r\n                if (_res.code === 200) {\r\n\r\n                } else if (_res.code === 201) {\r\n                    this.$confirm(_res.msg, '提示', {\r\n                        confirmButtonText: '确定',\r\n                        cancelButtonText: '取消',\r\n                        type: 'warning'\r\n                    }).then(() => {\r\n                        row.banner = 0\r\n                    }).catch(() => {\r\n\r\n                    });\r\n                }\r\n\r\n            },\r\n            search(e) {\r\n                console.log(e);\r\n                this.page = 1;\r\n                this.getData()\r\n            },\r\n            /**\r\n             * 新增和修改\r\n             * @param e\r\n             * @returns {Promise<void>}\r\n             */\r\n            async saveUpdate() {\r\n                let loading = this.$baseLoading(\"提交中...\");\r\n                if (this.addType !== 'auto') {\r\n                    let postData = {};\r\n                    // 编辑\r\n                    if (this.openType === 'edit') {\r\n                        postData = {\r\n                            id: this.tmpRow.id,\r\n                            name: this.tmpRow.name\r\n                        }\r\n                    } else {\r\n                        postData = {\r\n                            pid: this.tmpRow.id,\r\n                            level: this.tmpRow.level + 1,\r\n                            name: this.tmpRow.name\r\n                        }\r\n                    }\r\n                    await this.saveAction(postData);\r\n                    loading.close();\r\n                    return\r\n                }\r\n                console.log(this.addObj);\r\n                let _ids = [];\r\n                this.addObj.ids.forEach(i => {\r\n                    // 添加父级\r\n                    _ids.push(i[0]);\r\n                    _ids.push(i[1]);\r\n                    _ids.push(i[2]);\r\n                });\r\n\r\n                _ids = unique(_ids);\r\n                let ids = _ids.join(\",\");\r\n                this.$post(\"area/used/addAll\", ids).then(res => {\r\n                    loading.close();\r\n                    if (res.code === 200) {\r\n                        this.$message.success('添加成功');\r\n                        this.showAddBox = false;\r\n                        this.getData();\r\n                    }\r\n                }).catch(err => {\r\n                    loading.close();\r\n                    this.$baseMessage(\"网络请求失败\", 400);\r\n\r\n                })\r\n            },\r\n\r\n            saveAction(postData, tip = '操作') {\r\n                this.$api.post(\"area/used\", postData).then(res => {\r\n                    if (res.code === 200) {\r\n                        this.$message.success(tip + '成功');\r\n                        if (!postData.id) {\r\n                            let newChild = res.data;\r\n                            newChild.children = [];\r\n                            if (!this.tmpRow.children) {\r\n                                this.$set(this.tmpRow, 'children', []);\r\n                            }\r\n                            this.tmpRow.children.push(newChild);\r\n                        }\r\n                        this.showAddBox = false;\r\n                        this.getData();\r\n                    } else {\r\n                        this.$message.warning(res.msg)\r\n                    }\r\n                })\r\n            },\r\n\r\n            showEABox(row, openType) {\r\n                console.log(row);\r\n                this.openType = openType;\r\n                if (row && openType === 'edit') {\r\n                    this.tmpRow = row;\r\n                    this.editTitle = '编辑信息';\r\n                    this.submitText = '确认修改';\r\n                } else {\r\n                    let _newRow = {name: '', pid: 0, id: 0, level: 1};\r\n                    if (row) {\r\n                        _newRow.pid = row.id;\r\n                        _newRow.level = row.level + 1;\r\n                    }\r\n                    this.tmpRow = _newRow;\r\n                    this.editTitle = '新增分类';\r\n                    this.submitText = '提交';\r\n                }\r\n\r\n                this.showAddBox = true;\r\n            },\r\n\r\n            del(row) {\r\n                console.log(row);\r\n                this.$confirm('此操作将永久删除该条记录, 是否继续?', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.$api.del('area/' + row.id).then(_del => {\r\n                        if (_del.code === 200) {\r\n                            this.$message({\r\n                                type: 'success',\r\n                                message: '删除成功!'\r\n                            });\r\n                            this.getData()\r\n                        } else {\r\n                            this.$message({\r\n                                type: 'error',\r\n                                message: '删除删除失败'\r\n                            })\r\n                        }\r\n                    }).catch(err => {\r\n                        this.$message({\r\n                            type: 'error',\r\n                            message: '删除删除失败'\r\n                        })\r\n                    })\r\n\r\n                }).catch(() => {\r\n\r\n                })\r\n            },\r\n\r\n            exportExcel() {\r\n                this.showExportBox = true\r\n            },\r\n            exportNow() {\r\n                console.log(\"导出参数\", this.exportForm)\r\n                const loading = this.$loading({\r\n                    lock: true,\r\n                    text: '导出中...',\r\n                    spinner: 'el-icon-loading',\r\n                    background: 'rgba(0, 0, 0, 0.2)'\r\n                });\r\n                setTimeout(() => {\r\n                    loading.close();\r\n                }, 6000);\r\n            },\r\n            handleRemove(file, fileList) {\r\n                console.log(file, fileList)\r\n            },\r\n            handlePreview(file) {\r\n                console.log(file)\r\n            },\r\n\r\n            append(data) {\r\n                const newChild = {id: id++, label: 'testtest', children: []};\r\n                if (!data.children) {\r\n                    this.$set(data, 'children', []);\r\n                }\r\n                data.children.push(newChild);\r\n            },\r\n\r\n            remove(node, data) {\r\n                const parent = node.parent;\r\n                const children = parent.data.children || parent.data;\r\n                const index = children.findIndex(d => d.id === data.id);\r\n                children.splice(index, 1);\r\n            },\r\n\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 去重\r\n     * @param arr\r\n     * @returns {[]}\r\n     */\r\n    function unique(arr) {\r\n        if (!Array.isArray(arr)) {\r\n            console.log('type error!')\r\n            return\r\n        }\r\n        var array = [];\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (array.indexOf(arr[i]) === -1) {\r\n                array.push(arr[i])\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .custom-tree-node {\r\n        flex: 1;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        font-size: 14px;\r\n        padding-right: 8px;\r\n    }\r\n\r\n    /deep/ .el-tree-node__content {\r\n        height: 50px;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/views/selects"}]}