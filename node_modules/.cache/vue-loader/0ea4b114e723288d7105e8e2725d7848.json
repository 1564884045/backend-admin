{"remainingRequest":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\RQDL\\base\\backend-admin\\src\\components\\FormBuilder\\index.vue?vue&type=style&index=0&id=658981fa&scoped=true&lang=css&","dependencies":[{"path":"G:\\RQDL\\base\\backend-admin\\src\\components\\FormBuilder\\index.vue","mtime":1620715077786},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmVsLWZvcm0taXRlbSB7DQogIG1hcmdpbi1ib3R0b206IDA7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0QA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/FormBuilder","sourcesContent":["<template>\r\n  <el-form :inline=\"inline\" :ref=\"formName\" :model=\"formObj\" :label-width=\"labelWidth\" :rules=\"a_rules\">\r\n    <div class=\"el-form-item\" v-for=\"(field,index) in u_fields\" :key=\"index\">\r\n      <!--    输入 || 文本域       -->\r\n      <el-form-item :label=\"field.label\" :prop=\"field.prop\"\r\n                    v-if=\"!field.type || field.type === 'text' || field.type === 'textarea' || field.type === 'number'\">\r\n        <el-input :type=\"field.type\" v-model=\"formObj[field.prop]\"\r\n                  :placeholder=\"field.placeholder\"/>\r\n      </el-form-item>\r\n      <!--     END  输入 || 文本域       -->\r\n\r\n      <!--     选择框       -->\r\n      <el-form-item :label=\"field.label\" v-else-if=\"field.type === 'select'\" :prop=\"field.prop\">\r\n        <el-select v-model=\"formObj[field.prop]\" :placeholder=\"field.placeholder\">\r\n          <el-option v-for=\"(option,o_index) in field.options\" :key=\"o_index\"\r\n                     :label=\"option.label\" :value=\"option.value\"/>\r\n        </el-select>\r\n      </el-form-item>\r\n      <!--    END 选择框       -->\r\n\r\n      <!--  时间日期 -->\r\n      <el-form-item :label=\"field.label\" v-else-if=\"field.type === 'date'\">\r\n        <el-date-picker :placeholder=\"field.placeholder\" :value-format=\"field.format || 'yyyy-MM-dd HH:mm:ss'\"\r\n                        v-model=\"formObj[field.prop]\"\r\n                        style=\"max-width: 200px;\">\r\n        </el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item  :label=\"field.label\" v-else-if=\"field.type === 'time'\">\r\n        <el-time-picker v-model=\"formObj[field.prop]\" value-format=\"HH:ii:ss\"\r\n                        :placeholder=\"field.placeholder\"\r\n                        style=\"max-width: 200px;\">\r\n        </el-time-picker>\r\n      </el-form-item>\r\n      <!--  END 时间日期  -->\r\n\r\n      <!--      开关       -->\r\n      <el-form-item :label=\"field.label\" v-else-if=\"field.type === 'switch'\" :prop=\"field.prop\">\r\n        <el-switch v-model=\"formObj[field.prop]\"/>\r\n      </el-form-item>\r\n      <!--     END 开关       -->\r\n      <!--多选框-->\r\n      <el-form-item :label=\"field.label\" v-else-if=\"field.type === 'checkbox'\" :prop=\"field.prop\">\r\n        <el-checkbox-group v-model=\"formObj[field.prop]\">\r\n          <el-checkbox v-for=\"(box,box_index) in field.options\" :key=\"box_index\" :name=\"field.prop\"\r\n                       v-model=\"formObj[field.prop][box.key]\" :label=\"box.key\">{{box.label}}\r\n          </el-checkbox>\r\n        </el-checkbox-group>\r\n      </el-form-item>\r\n      <!--END多选框-->\r\n\r\n      <!--     单选框       -->\r\n      <el-form-item :label=\"field.label\" v-else-if=\"field.type === 'radio'\" :prop=\"field.prop\">\r\n        <el-radio-group v-model=\"formObj[field.prop]\">\r\n          <el-radio v-for=\"(radio,radio_index) in field.options\"\r\n                    :key=\"radio_index\"\r\n                    :label=\"radio.key\">{{radio.label}}\r\n          </el-radio>\r\n        </el-radio-group>\r\n      </el-form-item>\r\n      <!--     END 单选框       -->\r\n    </div>\r\n    <!--    其他自定义输入    -->\r\n    <slot/>\r\n    <el-form-item>\r\n      <el-button size=\"small\" type=\"primary\" @keyup.enter=\"onSubmit(formName)\" @click=\"onSubmit(formName)\">\r\n        {{submitName}}\r\n      </el-button>\r\n    </el-form-item>\r\n    <slot name=\"btn\"/>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'FormBuilder',\r\n    props: {\r\n      labelWidth: {\r\n        type: String,\r\n        default: '100px'\r\n      },\r\n      /**\r\n       * 是否一行显示\r\n       */\r\n      inline: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      /**\r\n       * 获取字段的链接\r\n       */\r\n      formName: {\r\n        type: String,\r\n        default: function() {\r\n          return ''\r\n        }\r\n      },\r\n      /**\r\n       * 表单名称\r\n       */\r\n      name: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      /**\r\n       *\r\n       */\r\n      submitName: {\r\n        type: String,\r\n        default: '立即提交'\r\n      },\r\n\r\n      /**\r\n       * 录入字段\r\n       */\r\n      fields: {\r\n        type: Array,\r\n        default: function() {\r\n          return []\r\n        }\r\n      },\r\n      /**\r\n       * 验证规则\r\n       */\r\n      rules: {\r\n        type: Array,\r\n        default: function() {\r\n          return []\r\n        }\r\n      },\r\n      /**\r\n       * 是否需要从网络加载\r\n       */\r\n      webForm: {\r\n        type: Boolean,\r\n        default: function() {\r\n          return false\r\n        }\r\n      },\r\n      defaultValue: {\r\n        type: Object,\r\n        default: function() {\r\n          return null\r\n        }\r\n      }\r\n\r\n    },\r\n    data() {\r\n      return {\r\n        p_rules: [],\r\n        u_fields: [],\r\n        a_rules: {}, // 验证规则\r\n        formObj: {} // 生成的表单对象\r\n      }\r\n    },\r\n    async created() {\r\n      if (!this.webForm) {\r\n        this.u_fields = this.fields\r\n        this.calcObj()\r\n        return\r\n      }\r\n\r\n      if (!this.formName) return\r\n      // TODO 线上获取表单\r\n      let _table = await this.$api.get('getFormFields', { form: this.formName })\r\n      console.log(_table)\r\n      if (_table.code === 200) {\r\n        let _fields = _table.data\r\n        // 结合本地的字段\r\n        if (this.fields.length > 0) {\r\n          _fields = _fields.concat(this.fields)\r\n        }\r\n        console.log(_fields)\r\n        return this.u_fields = _fields\r\n      }\r\n      return this.u_fields = []\r\n\r\n    },\r\n\r\n    watch: {\r\n      u_fields: (val) => {\r\n        console.log('12341241', val)\r\n\r\n      }\r\n    },\r\n    methods: {\r\n      onSubmit(formName) {\r\n        console.log(formName)\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            this.$emit('onSubmit', this.formObj)\r\n          } else {\r\n            console.log('error submit!!')\r\n            return false\r\n          }\r\n        })\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields()\r\n      },\r\n      calcObj() {\r\n        let _tmpRule = {},\r\n                _tmpForm = {}\r\n        this.u_fields.forEach(field => {\r\n          let _tmp = []\r\n          // 判断是否带有rule\r\n          if (field.rules) _tmp = [...field.rules]\r\n          let hasRequireRule = false\r\n          _tmp.forEach(_r => {\r\n            if (_r['required']) {\r\n              hasRequireRule = true\r\n            }\r\n          })\r\n          // 表单对象\r\n          _tmpForm[field.prop] = ''\r\n          // 没有自带的判断，并且为必须\r\n          if (!hasRequireRule && field.required) {\r\n            let message = '', trigger = 'blur', required = true, type = ''\r\n            switch (field.type) {\r\n              case 'text':\r\n              case 'textarea':\r\n                message = '请输入' + field.label\r\n                break\r\n              case 'select':\r\n                message = '请选择' + field.label\r\n                trigger = 'change'\r\n                break\r\n\r\n              case 'date':\r\n                message = '请选择' + field.label\r\n                trigger = 'change'\r\n                break\r\n              case 'time':\r\n                message = '请选择' + field.label\r\n                trigger = 'change'\r\n                break\r\n              case 'radio':\r\n                message = '请至选择' + field.label\r\n                trigger = 'change'\r\n                break\r\n\r\n              case 'checkbox':\r\n                message = '请至少选择一项' + field.label\r\n                trigger = 'change'\r\n                type = 'array'\r\n                break\r\n            }\r\n            if (field.trigger) trigger = field.trigger\r\n            // 如果是时间选择则不在这里添加验证\r\n            if (field.type !== 'datePicker') _tmp.push({ required, message, trigger, type })\r\n          }\r\n          if (field.type !== 'datePicker') _tmpRule[field.prop] = _tmp\r\n\r\n        })\r\n\r\n        this.a_rules = _tmpRule\r\n        if (this.defaultValue != null) {\r\n          this.formObj = this.defaultValue\r\n        } else {\r\n          this.formObj = _tmpForm\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.el-form-item {\r\n  margin-bottom: 0;\r\n}\r\n</style>\r\n"]}]}