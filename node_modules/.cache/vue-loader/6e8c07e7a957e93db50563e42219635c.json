{"remainingRequest":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\RQDL\\base\\backend-admin\\src\\components\\TableBuilder\\index.vue?vue&type=style&index=0&id=35e2fa60&scoped=true&lang=css&","dependencies":[{"path":"G:\\RQDL\\base\\backend-admin\\src\\components\\TableBuilder\\index.vue","mtime":1620715077795},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi9kZWVwLyAuZWwtcGFnaW5hdGlvbiB7CiAgd2hpdGUtc3BhY2U6IHByZS13cmFwOwp9CgouY29sLWltZyB7CiAgZGlzcGxheTogZmxleDsKICB3aWR0aDogMTAwJTsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1jb250ZW50OiBjZW50ZXI7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/TableBuilder","sourcesContent":["<template>\r\n  <div style=\"height: 100%;\">\r\n    <!--    表格顶部    -->\r\n    <slot name=\"tableHeader\"/>\r\n\r\n    <!--    //表格顶部    -->\r\n\r\n    <!--  表格主体  -->\r\n    <el-table\r\n      :data=\"tableData\" border\r\n      v-loading=\"loading\"\r\n      element-loading-text=\"拼命加载中...\"\r\n      element-loading-spinner=\"el-icon-loading\"\r\n      element-loading-background=\"rgba(0, 0, 0, 0.8)\"\r\n\r\n      @selection-change=\"handleSelectionChange\"\r\n      :highlight-current-row=\"singleChoice\"\r\n      @current-change=\"clickCurrentRow\"\r\n      ref=\"tableBuilder\"\r\n      style=\"width: 100%\">\r\n      <el-table-column v-if=\"showSelection\" type=\"selection\" width=\"39\"/>\r\n\r\n      <el-table-column v-for=\"(col,index) in columns\" :key=\"index\" :sortable=\"col.sortable\"\r\n                       :prop=\"col.prop\"\r\n                       :label=\"col.label\"\r\n                       :fixed=\"col.fixed\"\r\n                       :width=\"col.width\">\r\n        <template slot-scope=\"{row,$index}\">\r\n          <div v-if=\"col.canEdit === true\">\r\n            <div v-if=\"editField ==='edit_'+col.prop+'_'+$index\">\r\n              <el-input :type=\"col.editType || 'text'\" v-model=\"row[col.prop]\" class=\"edit-input\"\r\n                        size=\"small\"\r\n                        @blur=\"blur(row,col.prop)\">\r\n                <i slot=\"suffix\" @click=\"cancelEdit(row)\" class=\"el-input__icon el-icon-close\"/>\r\n              </el-input>\r\n            </div>\r\n            <div v-else class=\"col-custom\" style=\"height: 50px;width: 100%\"\r\n                 @dblclick=\"dblclick(row,'edit_'+col.prop+'_'+$index,row[col.prop])\">\r\n              {{ col.pipe ? col.pipe(row[col.prop]) : row[col.prop] }}\r\n            </div>\r\n          </div>\r\n          <div v-else class=\"col-custom\" style=\"height: 50px;width: 100%\" @click=\"tap(row)\">\r\n            <div v-if=\"col.type === 'img'\" class=\"col-img\">\r\n              <el-image style=\"width: 50px; height: 50px\" :src=\"(col.pipe ? col.pipe(row[col.prop]) : row[col.prop])\"\r\n                        fit=\"cover\" :preview-src-list=\"[(col.pipe ? col.pipe(row[col.prop]) : row[col.prop])]\"/>\r\n            </div>\r\n            <div v-else>{{ col.pipe ? col.pipe(row[col.prop]) : row[col.prop] }}</div>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <slot/>\r\n    </el-table>\r\n    <!-- // 表格主体   -->\r\n    <!--分页数据-->\r\n    <div class=\"block\" style=\"margin-top: 10px;\" v-if=\"showPagination\">\r\n      <el-pagination background\r\n                     @size-change=\"handleSizeChange\"\r\n                     @current-change=\"handleCurrentChange\"\r\n                     @prev-click=\"prePageData\"\r\n                     @next-click=\"nextPageData\"\r\n                     :current-page.sync=\"currentPage\"\r\n                     :page-sizes=\"[10, 20, 50]\"\r\n                     :page-size=\"pageSize\"\r\n                     layout=\"total, sizes, prev, pager, next, jumper\"\r\n                     :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'TableBuilder',\r\n    props: {\r\n      /**\r\n       * 显示多选\r\n       */\r\n      showSelection: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n\r\n      /**\r\n       * 单选\r\n       */\r\n      singleChoice: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      /**\r\n       * 表格名，用于请求后端获取渲染数据\r\n       */\r\n      tableName: {\r\n        type: String,\r\n        default: function () {\r\n          return ''\r\n        }\r\n      },\r\n      /**\r\n       * 如果没有获取链接，使用本地传入也行\r\n       */\r\n      cols: {\r\n        type: Array,\r\n        default: function () {\r\n          return []\r\n        }\r\n      },\r\n      /**\r\n       * 显示的数据\r\n       */\r\n      tableData: {\r\n        type: Array,\r\n        default: function () {\r\n          return []\r\n        }\r\n      },\r\n      total: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      showPagination: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      loading: {\r\n        type: Boolean,\r\n        default: false\r\n      }\r\n\r\n    },\r\n    data() {\r\n      return {\r\n        editField: '',\r\n        tmpOld: '', // 旧值\r\n        columns: [],\r\n        table_data: [],\r\n        currentPage: 1,//当前显示页\r\n        pageSize: 10,//当前分页 每页数据条数\r\n\r\n        currentRow: null,\r\n\r\n      }\r\n    },\r\n    async created() {\r\n      if (this.cols.length > 0) {\r\n        this.columns = this.cols\r\n      } else if (this.tableName) {\r\n        // 网络加载列\r\n        let _table = await this.$api.get('getTableCols', {table: this.tableName})\r\n        console.log(_table)\r\n        if (_table.code === 200) {\r\n          this.columns = _table.data\r\n        } else {\r\n          this.columns = []\r\n        }\r\n        console.log(this.tableName)\r\n      }\r\n    },\r\n    methods: {\r\n      tap(row) {\r\n        console.log(123);\r\n        this.$emit('click', row)\r\n      },\r\n      dblclick(row, id, old) {\r\n        this.editField = id;\r\n        this.tmpOld = old;\r\n        console.log('双击', row, this.editField);\r\n\r\n        this.$emit('colDblclick', row)\r\n      },\r\n      // 保存\r\n      blur(row, field) {\r\n        console.log(field, this.tmpOld)\r\n        console.log('失焦', row, this.editField)\r\n        this.editField = '';\r\n        // 新旧不等才提交\r\n        if (row[field] !== this.tmpOld) {\r\n          this.$emit('colBlur', {row, field, old: this.tmpOld})\r\n        }\r\n      },\r\n      cancelEdit(row) {\r\n        this.editField = '';\r\n        this.$emit('cancelEdit', row)\r\n      },\r\n      handleSelectionChange(val) {\r\n        this.$emit('selectionChange', val)\r\n      },\r\n\r\n      handleSizeChange(val) {//每页数据条数\r\n        this.pageSize = val;\r\n        this.currentPage = 1;\r\n        this.$emit('pageChange', {\r\n          pageSize: this.pageSize,\r\n          page: this.currentPage\r\n        })\r\n      },\r\n      handleCurrentChange(val) {//点击或跳转val页\r\n        this.currentPage = val;\r\n        this.$emit('pageChange', {\r\n          pageSize: this.pageSize,\r\n          page: this.currentPage\r\n        })\r\n      },\r\n      prePageData() {//上一页\r\n        this.currentPage -= 1;\r\n        this.$emit('pageChange', {\r\n          pageSize: this.pageSize,\r\n          page: this.currentPage\r\n        })\r\n      },\r\n      nextPageData() {//下一页\r\n        this.currentPage += 1;\r\n        this.$emit('pageChange', {\r\n          pageSize: this.pageSize,\r\n          page: this.currentPage\r\n        })\r\n      },\r\n      clickCurrentRow(row) {\r\n        if (this.singleChoice) {\r\n          this.$refs.tableBuilder.setCurrentRow(row);\r\n          this.$emit('clickCurrent', row)\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  /deep/ .el-pagination {\r\n    white-space: pre-wrap;\r\n  }\r\n\r\n  .col-img {\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-content: center;\r\n  }\r\n</style>\r\n"]}]}