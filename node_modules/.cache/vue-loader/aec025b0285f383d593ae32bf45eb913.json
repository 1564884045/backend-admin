{"remainingRequest":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\RQDL\\base\\backend-admin\\src\\views\\ui\\home\\category.vue?vue&type=template&id=09729e8d&scoped=true&","dependencies":[{"path":"G:\\RQDL\\base\\backend-admin\\src\\views\\ui\\home\\category.vue","mtime":1620715077881},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}