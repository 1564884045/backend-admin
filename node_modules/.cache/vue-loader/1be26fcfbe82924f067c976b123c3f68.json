{"remainingRequest":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\RQDL\\base\\backend-admin\\src\\views\\selects\\subject.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\RQDL\\base\\backend-admin\\src\\views\\selects\\subject.vue","mtime":1621303824032},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\RQDL\\base\\backend-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["subject.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"subject.vue","sourceRoot":"src/views/selects","sourcesContent":["<template>\r\n    <div style=\"height: 100%;max-width: 900px;margin: 0 auto\">\r\n\r\n        <div class=\"flex ptb-10 align-center\">\r\n            <div class=\"w-50\">\r\n                <el-button icon=\"el-icon-plus\" type=\"primary\" @click=\"showEABox(null,false)\">\r\n                    添加\r\n                </el-button>\r\n            </div>\r\n\r\n            <div class=\"w-50 flex justify-end\">\r\n                <el-form class=\"align-center flex\" :inline=\"true\" :model=\"queryData\" @submit.native.prevent>\r\n                    <el-input class=\"mlr-10\"\r\n                              v-model.trim=\"queryData.searchKey\"\r\n                              placeholder=\"请输入查询条件\"\r\n                              clearable\r\n                    />\r\n                    <el-button icon=\"el-icon-search\" type=\"primary\" @click=\"search\">\r\n                        查询\r\n                    </el-button>\r\n                </el-form>\r\n            </div>\r\n        </div>\r\n\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"24\">\r\n                <el-tree\r\n                    :data=\"tableData\"\r\n                    lazy\r\n                    :load=\"loadChild\"\r\n                    node-key=\"id\"\r\n                    label=\"name\">\r\n                    <div class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n                        <span>{{ data.name }}</span>\r\n                        <div>\r\n                            <el-select style=\"margin-right: 10px\" size=\"mini\" v-model=\"data.status\" placeholder=\"请选择\"\r\n                                       @change=\"statusChange($event,data)\">\r\n                                <el-option\r\n                                    v-for=\"item in showArr\"\r\n                                    :key=\"item.value\"\r\n                                    :label=\"item.label\"\r\n                                    :value=\"item.value\">\r\n                                </el-option>\r\n                            </el-select>\r\n                            <el-button type=\"success\" size=\"mini\" @click.stop=\"() => showEABox(data,false)\">\r\n                                添加\r\n                            </el-button>\r\n                            <el-button type=\"primary\" size=\"mini\" @click.stop=\"() => showEABox(data,true)\">\r\n                                修改\r\n                            </el-button>\r\n                            <el-button type=\"danger\" size=\"mini\" @click.stop=\"() => del(data)\">\r\n                                删除\r\n                            </el-button>\r\n                        </div>\r\n                    </div>\r\n                </el-tree>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!--  弹窗 //新增 编辑 -->\r\n        <el-dialog :visible.sync=\"showAddBox\" :title=\"editTitle\" :close-on-click-modal=\"false\">\r\n            <el-form v-if=\"showAddBox\" ref=\"form\" :model=\"tmpRow\" label-width=\"150px\">\r\n                <el-form-item label=\"名称\" prop=\"name\">\r\n                    <el-input v-model=\"tmpRow.name\"/>\r\n                </el-form-item>\r\n                <el-form-item label=\"简介（可选）\" prop=\"intro\">\r\n                    <el-input type=\"textarea\" v-model=\"tmpRow.intro\"/>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"saveUpdate\">{{ submitText }}</el-button>\r\n                    <el-button @click=\"showAddBox = false\">取消</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    const showType = {\r\n        home_show: '首页展示',\r\n        category_show: '商城页展示',\r\n    };\r\n\r\n    let id = 1000;\r\n    export default {\r\n        name: 'subjectList',\r\n        data() {\r\n            return {\r\n                // 页面结构数据\r\n                tableData: [],\r\n                // 搜索表单字段\r\n                searchFields: [\r\n                    {label: '分类', prop: 'name', type: 'text'},\r\n                ],\r\n                // 查询数据\r\n                queryData: {\r\n                    name: '',\r\n                },\r\n                // 自定义扩展字段\r\n                showArr: [\r\n                    {value: 1, label: '显示'},\r\n                    {value: 0, label: '不显示'},\r\n                ],\r\n\r\n                // 页面显示数据\r\n                showAddBox: false,\r\n                uploadUrl: this.$api.uploadUrl,\r\n\r\n                imageUrl: '',\r\n                tmpRow: { // 查看、添加的临时变量\r\n                    id: '',\r\n                    pid: '',\r\n                    name: '',\r\n                    type: '',\r\n                    status: 1,\r\n                    level: 1\r\n                },\r\n                editTitle: '添加',\r\n                submitText: '确认添加',\r\n            }\r\n        },\r\n        created() {\r\n            this.getData();\r\n            // 获取供应商\r\n\r\n        },\r\n        methods: {\r\n            /**\r\n             * 本页获取数据\r\n             */\r\n            async getData() {\r\n                this.queryData.pid = 0;\r\n                this.queryData.level = 1;\r\n\r\n                let _data = await this.$api.get('subject/list', this.queryData);\r\n                console.log(_data);\r\n                if (_data.code === 200) {\r\n                    let _list = _data.data.list;\r\n                    _list.map(i => {\r\n                        i.leaf = false\r\n                    });\r\n                    this.tableData = _list;\r\n                    this.total = _data.data.total\r\n                }\r\n            },\r\n            loadChild(node, resolve) {\r\n                resolve([])\r\n            },\r\n            async statusChange(e, row) {\r\n                let postData = {\r\n                    id: row.id,\r\n                    status: e\r\n                };\r\n\r\n                console.log(e);\r\n                console.log(row);\r\n                let _res = await this.$api.post(\"subject\", postData);\r\n\r\n                if (_res.code === 200) {\r\n\r\n                } else if (_res.code === 201) {\r\n                    this.$confirm(_res.msg, '提示', {\r\n                        confirmButtonText: '确定',\r\n                        cancelButtonText: '取消',\r\n                        type: 'warning'\r\n                    }).then(() => {\r\n                        row.banner = 0\r\n                    }).catch(() => {\r\n\r\n                    });\r\n                }\r\n\r\n            },\r\n            search(e) {\r\n                console.log(e);\r\n                this.page = 1;\r\n                this.getData()\r\n            },\r\n            /**\r\n             * 新增和修改\r\n             * @param e\r\n             * @returns {Promise<void>}\r\n             */\r\n            async saveUpdate() {\r\n                console.log(this.tmpRow);\r\n                let _tip;\r\n                let _postData = this.tmpRow;\r\n                if (this.tmpRow.id) {\r\n                    _tip = '修改';\r\n                } else {\r\n                    _tip = '新增';\r\n                }\r\n                this.saveAction(_postData, _tip);\r\n            },\r\n\r\n            saveAction(postData, tip = '操作') {\r\n                this.$api.post(\"subject\", postData).then(res => {\r\n                    if (res.code === 200) {\r\n                        this.$message.success(tip + '成功');\r\n                        if (!postData.id) {\r\n                            let newChild = res.data;\r\n                            newChild.children = [];\r\n                            if (!this.tmpRow.children) {\r\n                                this.$set(this.tmpRow, 'children', []);\r\n                            }\r\n                            this.tmpRow.children.push(newChild);\r\n                        }\r\n                        this.showAddBox = false;\r\n                        this.getData();\r\n                    } else {\r\n                        this.$message.warning(res.msg)\r\n                    }\r\n                })\r\n            },\r\n\r\n            showEABox(row, edit) {\r\n                console.log(row);\r\n                if (edit) {\r\n                    this.tmpRow = row;\r\n                    this.editTitle = '编辑信息';\r\n                    this.submitText = '确认修改';\r\n                } else {\r\n                    let _newRow = {name: '', pid: 0, level: 1};\r\n                    if (row) {\r\n                        _newRow.pid = row.id;\r\n                        _newRow.level = row.level + 1;\r\n                    }\r\n                    this.tmpRow = _newRow;\r\n                    this.editTitle = '新增分类';\r\n                    this.submitText = '提交';\r\n                }\r\n                this.showAddBox = true;\r\n            },\r\n\r\n            del(row) {\r\n                console.log(row);\r\n                this.$confirm('此操作将永久删除该条记录, 是否继续?', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.$api.del('subject/' + row.id).then(_del => {\r\n                        if (_del.code === 200) {\r\n                            this.$message({\r\n                                type: 'success',\r\n                                message: '删除成功!'\r\n                            });\r\n                            this.getData()\r\n                        } else {\r\n                            this.$message({\r\n                                type: 'error',\r\n                                message: '删除删除失败'\r\n                            })\r\n                        }\r\n                    }).catch(err => {\r\n                        this.$message({\r\n                            type: 'error',\r\n                            message: '删除删除失败'\r\n                        })\r\n                    })\r\n\r\n                }).catch(() => {\r\n\r\n                })\r\n            },\r\n\r\n            exportExcel() {\r\n                this.showExportBox = true\r\n            },\r\n            exportNow() {\r\n                console.log(\"导出参数\", this.exportForm)\r\n                const loading = this.$loading({\r\n                    lock: true,\r\n                    text: '导出中...',\r\n                    spinner: 'el-icon-loading',\r\n                    background: 'rgba(0, 0, 0, 0.2)'\r\n                });\r\n                setTimeout(() => {\r\n                    loading.close();\r\n                }, 6000);\r\n            },\r\n            handleRemove(file, fileList) {\r\n                console.log(file, fileList)\r\n            },\r\n            handlePreview(file) {\r\n                console.log(file)\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .custom-tree-node {\r\n        flex: 1;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        font-size: 14px;\r\n        padding-right: 8px;\r\n    }\r\n\r\n    /deep/ .el-tree-node__content {\r\n        height: 50px;\r\n    }\r\n</style>\r\n"]}]}